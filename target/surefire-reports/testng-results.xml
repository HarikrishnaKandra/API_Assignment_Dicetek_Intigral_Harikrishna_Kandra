<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="21" passed="20" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-02-20T23:02:05 IST" name="BookerAPISuite" finished-at="2025-02-20T23:02:28 IST" duration-ms="23004">
    <groups>
    </groups>
    <test started-at="2025-02-20T23:02:05 IST" name="BookerAPITest" finished-at="2025-02-20T23:02:28 IST" duration-ms="23004">
      <class name="api.test.BookerNegativeTests">
        <test-method signature="validatetestMissingFirstname()[pri:1, instance:api.test.BookerNegativeTests@71cf1b07]" started-at="2025-02-20T23:02:15 IST" name="validatetestMissingFirstname" finished-at="2025-02-20T23:02:16 IST" duration-ms="1439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatetestMissingFirstname -->
        <test-method signature="validatetestInvalidPriceDataType()[pri:2, instance:api.test.BookerNegativeTests@71cf1b07]" started-at="2025-02-20T23:02:16 IST" name="validatetestInvalidPriceDataType" finished-at="2025-02-20T23:02:18 IST" duration-ms="1431" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatetestInvalidPriceDataType -->
        <test-method signature="validatetestInvalidDateFormat()[pri:3, instance:api.test.BookerNegativeTests@71cf1b07]" started-at="2025-02-20T23:02:18 IST" name="validatetestInvalidDateFormat" finished-at="2025-02-20T23:02:19 IST" duration-ms="1425" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatetestInvalidDateFormat -->
        <test-method signature="validatetestMissingBookingDates()[pri:4, instance:api.test.BookerNegativeTests@71cf1b07]" started-at="2025-02-20T23:02:19 IST" name="validatetestMissingBookingDates" finished-at="2025-02-20T23:02:20 IST" duration-ms="1431" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatetestMissingBookingDates -->
        <test-method signature="validatetestGetBookingWithInvalidId()[pri:5, instance:api.test.BookerNegativeTests@71cf1b07]" started-at="2025-02-20T23:02:20 IST" name="validatetestGetBookingWithInvalidId" finished-at="2025-02-20T23:02:22 IST" duration-ms="1538" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatetestGetBookingWithInvalidId -->
        <test-method signature="validatetestRequestWithoutContentType()[pri:6, instance:api.test.BookerNegativeTests@71cf1b07]" started-at="2025-02-20T23:02:22 IST" name="validatetestRequestWithoutContentType" finished-at="2025-02-20T23:02:23 IST" duration-ms="1449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatetestRequestWithoutContentType -->
      </class> <!-- api.test.BookerNegativeTests -->
      <class name="api.test.BookerNegativeTests1">
        <test-method is-config="true" signature="setup()[pri:0, instance:api.test.BookerNegativeTests1@615091b8]" started-at="2025-02-20T23:02:23 IST" name="setup" finished-at="2025-02-20T23:02:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="validatetestNegativeScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.Object,boolean,java.lang.String,java.lang.String)[pri:1, instance:api.test.BookerNegativeTests1@615091b8]" started-at="2025-02-20T23:02:23 IST" name="validatetestNegativeScenarios" data-provider="negativeTestCases" finished-at="2025-02-20T23:02:25 IST" duration-ms="1480" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[missingFirstname]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Doe]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[2023-01-01]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[2023-01-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatetestNegativeScenarios -->
        <test-method signature="validatetestNegativeScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.Object,boolean,java.lang.String,java.lang.String)[pri:1, instance:api.test.BookerNegativeTests1@615091b8]" started-at="2025-02-20T23:02:25 IST" name="validatetestNegativeScenarios" data-provider="negativeTestCases" finished-at="2025-02-20T23:02:26 IST" duration-ms="1380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[invalidPrice]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[John]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Doe]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[invalid]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[2023-01-01]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[2023-01-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatetestNegativeScenarios -->
        <test-method signature="validatetestNegativeScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.Object,boolean,java.lang.String,java.lang.String)[pri:1, instance:api.test.BookerNegativeTests1@615091b8]" started-at="2025-02-20T23:02:26 IST" name="validatetestNegativeScenarios" data-provider="negativeTestCases" finished-at="2025-02-20T23:02:28 IST" duration-ms="1622" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[invalidCheckinFormat]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[John]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Doe]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2023]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[2023-01-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatetestNegativeScenarios -->
      </class> <!-- api.test.BookerNegativeTests1 -->
      <class name="api.test.BookerPositiveTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:api.test.BookerPositiveTests@25a6944c]" started-at="2025-02-20T23:02:05 IST" name="setUp" finished-at="2025-02-20T23:02:06 IST" duration-ms="670" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCreateBooking()[pri:1, instance:api.test.BookerPositiveTests@25a6944c]" started-at="2025-02-20T23:02:06 IST" name="testCreateBooking" finished-at="2025-02-20T23:02:12 IST" duration-ms="6439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateBooking -->
        <test-method signature="validateAddItemStatusCode()[pri:2, instance:api.test.BookerPositiveTests@25a6944c]" started-at="2025-02-20T23:02:12 IST" name="validateAddItemStatusCode" finished-at="2025-02-20T23:02:12 IST" depends-on-methods="api.test.BookerPositiveTests.testCreateBooking" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAddItemStatusCode -->
        <test-method signature="validateAddItemResponseTime()[pri:3, instance:api.test.BookerPositiveTests@25a6944c]" started-at="2025-02-20T23:02:12 IST" name="validateAddItemResponseTime" finished-at="2025-02-20T23:02:12 IST" depends-on-methods="api.test.BookerPositiveTests.testCreateBooking" duration-ms="29" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Response time is too high! expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Response time is too high! expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertTrue(Assert.java:56)
at api.test.BookerPositiveTests.validateAddItemResponseTime(BookerPositiveTests.java:103)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAddItemResponseTime -->
        <test-method signature="validateContentTypeHeader()[pri:4, instance:api.test.BookerPositiveTests@25a6944c]" started-at="2025-02-20T23:02:12 IST" name="validateContentTypeHeader" finished-at="2025-02-20T23:02:12 IST" depends-on-methods="api.test.BookerPositiveTests.testCreateBooking" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateContentTypeHeader -->
        <test-method signature="validateResponseBodyFields()[pri:5, instance:api.test.BookerPositiveTests@25a6944c]" started-at="2025-02-20T23:02:12 IST" name="validateResponseBodyFields" finished-at="2025-02-20T23:02:13 IST" depends-on-methods="api.test.BookerPositiveTests.testCreateBooking" duration-ms="246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateResponseBodyFields -->
        <test-method signature="validateBookingDatesFormat()[pri:6, instance:api.test.BookerPositiveTests@25a6944c]" started-at="2025-02-20T23:02:13 IST" name="validateBookingDatesFormat" finished-at="2025-02-20T23:02:13 IST" depends-on-methods="api.test.BookerPositiveTests.testCreateBooking" duration-ms="67" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBookingDatesFormat -->
        <test-method signature="testGetBooking()[pri:7, instance:api.test.BookerPositiveTests@25a6944c]" started-at="2025-02-20T23:02:13 IST" name="testGetBooking" finished-at="2025-02-20T23:02:15 IST" depends-on-methods="api.test.BookerPositiveTests.testCreateBooking" duration-ms="1794" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetBooking -->
        <test-method signature="validateReadItemStatusCode()[pri:8, instance:api.test.BookerPositiveTests@25a6944c]" started-at="2025-02-20T23:02:15 IST" name="validateReadItemStatusCode" finished-at="2025-02-20T23:02:15 IST" depends-on-methods="api.test.BookerPositiveTests.testGetBooking" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReadItemStatusCode -->
        <test-method signature="validateReadItemResponseTime()[pri:9, instance:api.test.BookerPositiveTests@25a6944c]" started-at="2025-02-20T23:02:15 IST" name="validateReadItemResponseTime" finished-at="2025-02-20T23:02:15 IST" depends-on-methods="api.test.BookerPositiveTests.testGetBooking" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReadItemResponseTime -->
        <test-method signature="validatereadContentType()[pri:10, instance:api.test.BookerPositiveTests@25a6944c]" started-at="2025-02-20T23:02:15 IST" name="validatereadContentType" finished-at="2025-02-20T23:02:15 IST" depends-on-methods="api.test.BookerPositiveTests.testGetBooking" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatereadContentType -->
        <test-method signature="validatereadItesmBookingFields()[pri:11, instance:api.test.BookerPositiveTests@25a6944c]" started-at="2025-02-20T23:02:15 IST" name="validatereadItesmBookingFields" finished-at="2025-02-20T23:02:15 IST" depends-on-methods="api.test.BookerPositiveTests.testGetBooking" duration-ms="86" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatereadItesmBookingFields -->
        <test-method signature="validatereadItemDateFormat()[pri:12, instance:api.test.BookerPositiveTests@25a6944c]" started-at="2025-02-20T23:02:15 IST" name="validatereadItemDateFormat" finished-at="2025-02-20T23:02:15 IST" depends-on-methods="api.test.BookerPositiveTests.testGetBooking" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatereadItemDateFormat -->
      </class> <!-- api.test.BookerPositiveTests -->
    </test> <!-- BookerAPITest -->
  </suite> <!-- BookerAPISuite -->
</testng-results>
